package javaapplication31;

import java.io.FileInputStream;
import java.io.IOException;

/**
 *
 * @author admin
 */
public class NewMain {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException{
        // TODO code application logic here
        FileInputStream   fin=new FileInputStream("C:\\Users\\admin\\Documents\\example\\svmr.txt");
        int i;
        int count;
        count = 0;
        while((i=fin.read())!=-1)
        {
            if(i==' ')
            {
             count++;    
            }
           // System.out.print((char)i);\
           
        }
        System.out.println(count);
    }
   
}








class NewThread implements Runnable

{ 

 String name; 

 Thread t; 

 boolean suspendFlag; 

 NewThread(String threadname)

 { 

 name = threadname;

 t = new Thread(this, name); 

 System.out.println("New thread: " + t); 

 suspendFlag = false; 

 t.start(); 

 } 

public void run() { 

 try { 

 for(int i = 15; i > 0; i--)

 {
System.out.println(name + ": " + i); 

 Thread.sleep(200); 

 synchronized(this)

 { 

 while(suspendFlag) 

 { 

 wait(); 

 } 

 } 

 } 

 } 

 catch (InterruptedException e)

 { 

 System.out.println(name + " interrupted.");

 } 

 System.out.println(name + " exiting."); 

} 

 synchronized void mysuspend()

 { 

 suspendFlag = true; 

 

}

 synchronized void myresume() 

 { 

 suspendFlag = false; 

 notify();

 } }

public class SuspendResume 

{ 

 public static void main(String args[]) 

 { 

 NewThread ob1 = new NewThread("One"); 

 NewThread ob2 = new NewThread("Two"); 

 try

 { 

 Thread.sleep(1000); 

 ob1.mysuspend(); 

 System.out.println("Suspending thread One"); 

 Thread.sleep(1000); 

 

ob1.myresume(); 

 System.out.println("Resuming thread One"); 

 ob2.mysuspend(); 

 System.out.println("Suspending thread Two"); 

 Thread.sleep(1000);
ob2.myresume(); 

 System.out.println("Resuming thread Two"); 

 } 

 catch (InterruptedException e) 

 { 

 System.out.println("Main thread Interrupted"); 

 } 

 try 

 { 

 System.out.println("Waiting for threads to finish."); 

 ob1.t.join(); 

 ob2.t.join(); 

 } 

 catch (InterruptedException e)

 { 

 System.out.println("Main thread Interrupted"); 

 } 

 System.out.println("Main thread exiting."); 

 }

}
